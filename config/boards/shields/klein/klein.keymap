/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define _ &none
#define ___ &trans

#define BASE 0
#define NAV  1
#define NUML 2
#define NUMR 3
#define FUN  4
#define BLU  5

&mt {
   tapping-term-ms = <200>;
   quick-tap-ms = <50>;
   global-quick-tap;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q          &kp W          &kp E          &kp R          &kp T                                                &kp Y          &kp U          &kp I          &kp O          &kp P
&kp A          &mt LALT S     &mt LCTRL D    &mt LSHFT F    &mt BLU G                                            &kp H          &mt RSHFT J    &mt RCTRL K    &mt RALT L     &mt BLU SQT
&kp Z          &kp X          &kp C          &kp V          &kp B                                                &kp N          &kp M          &kp COMMA      &kp DOT        &kp FSLH
                                             &lt NUMR ESC  &lt NAV TAB    &kp BSPC    _ _    &kp SPACE           &lt FUN RET    &lt NUML DEL
            >;
sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };


        nav_layer {
            bindings = <
___            ___            ___            ___            ___                                                  ___            &kp K_PASTE    &kp K_CUT      &kp K_COPY     ___
&kp LGUI       &kp LALT       &kp LCTRL      &kp LSHFT      &kp BSPC                                             &kp LEFT       &kp DOWN       &kp UP         &kp RIGHT      ___
___            ___            ___            ___            ___                                                  &kp HOME       &kp PG_UP      &kp PG_DN      &kp END        ___
                                             ___            ___            ___             _ _    ___            &kp RET        &kp DEL
            >;
sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };


        numl_layer {
            bindings = <
&kp LBKT       &kp N7         &kp N8         &kp N9         &kp RBKT                                             ___            ___            ___            ___            ___
&kp SEMI       &kp N4         &kp N5         &kp N6         &kp EQUAL                                            &kp BSPC       &kp RSHFT      &kp RCTRL      &kp RALT       &kp RGUI
&kp GRAVE      &kp N1         &kp N2         &kp N3         &kp BSLH                                             &kp RET        &kp DEL        ___            ___            ___        
                                             &kp PERIOD     &kp N0         &kp MINUS       _ _    ___            &kp BSPC       -
            >;
sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };


numr_layer {
            bindings = <
___            ___            ___            ___            ___                                                  &kp LBKT       &kp N7         &kp N8         &kp N9         &kp RBKT                                             
&kp RGUI       &kp RALT       &kp RCTRL      &kp RSHFT      &kp BSPC                                             &kp SEMI       &kp N4         &kp N5         &kp N6         &kp EQUAL
___            ___            ___            &kp DEL        &kp RET                                              &kp GRAVE      &kp N1         &kp N2         &kp N3         &kp BSLH
                                             -              &kp SPACE         ___       _ _       &kp PERIOD     &kp N0         &kp MINUS
            >;
sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };


        fun_layer { 
            bindings = <
&kp F12        &kp F7         &kp F8         &kp F9         &kp PSCRN                                            ___            ___            ___            ___            ___
&kp F11        &kp F4         &kp F5         &kp F6         &kp SYSREQ                                           ___            &kp LSHFT      &kp LCTRL      &kp LALT       &kp LGUI
&kp F10        &kp F1         &kp F2         &kp F3         &kp PAUSE_BREAK                                      ___            ___            ___            ___            ___
                                             &kp ESC        &kp SPACE      &kp TAB         _ _    ___            ___            ___
            >;
sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };


        blu_layer {          
            bindings = <
&bootloader    ___            ___            ___            &bt BT_CLR                                           &bt BT_CLR     ___            ___            ___            &bootloader
___            ___            ___            ___            ___                                                  ___            ___            ___            ___            ___
&bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4                                         &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4
                                             &bt BT_CLR     ___           ___             _ _    ___            ___            &bt BT_CLR
            >;
sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };
    };
};
 
